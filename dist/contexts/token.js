import{jsx as _jsx}from"react/jsx-runtime";import{createContext,useCallback,useContext,useEffect,useState}from"react";export const TokenContext=createContext({token:null,updateToken:()=>{console.warn("TokenContext.updateToken was called without a provider.")}});export const useToken=()=>{return useContext(TokenContext)};export const TokenProvider=({children})=>{const[token,setToken]=useState();useEffect(()=>{setToken(localStorage.getItem("token"))},[]);const updateToken=useCallback(token=>{token==null?localStorage.removeItem("token"):localStorage.setItem("token",token);setToken(token)},[]);return _jsx(TokenContext.Provider,{value:{token,updateToken},children:children})};
//# sourceMappingURL=token.js.map