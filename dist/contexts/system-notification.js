import{jsx as _jsx}from"react/jsx-runtime";import{createContext,useCallback,useContext,useRef,useState}from"react";const useSystemNotificationsProvider=()=>{const[notifications,setNotifications]=useState(new Map);const timers=useRef(new Map);const cleanDeletionTimer=useCallback(key=>{const timer=timers.current.get(key);if(timer!=null)clearTimeout(timer);timers.current.delete(key)},[]);const deleteNotification=useCallback((key,immediate)=>{setNotifications(prevState=>{cleanDeletionTimer(key);const notification=prevState.get(key);if(notification==null)return prevState;if(!notification.meta.deleteTimeout||immediate){prevState.delete(key);return new Map(prevState)}notification.state.isDeleting=true;prevState.set(key,notification);timers.current.set(key,setTimeout(()=>deleteNotification(key,true),notification.meta.deleteTimeout));return new Map(prevState)})},[cleanDeletionTimer]);const upsertNotification=useCallback((key,meta,context)=>{setNotifications(prevState=>{cleanDeletionTimer(key);prevState.set(key,{meta,context,state:{isDeleting:false}});return new Map(prevState)})},[cleanDeletionTimer]);const updateNotification=useCallback((key,updater)=>{const notification=notifications.get(key);const action=typeof updater==="function"?updater(key,notification):updater;if(action==null)return;switch(action.method){case"upsert":upsertNotification(key,action.meta,action.context);break;case"delete":deleteNotification(key);break}},[deleteNotification,notifications,upsertNotification]);return{notifications,updateNotification}};export const SystemNotificationsContext=createContext({notifications:new Map,updateNotification:()=>{console.warn("An attempt was made to call SystemNotificationsContext.updateNotification, but this context has not been initialized")}});export const SystemNotificationsProvider=({children})=>{const provider=useSystemNotificationsProvider();return _jsx(SystemNotificationsContext.Provider,{value:provider,children:children})};export const useSystemNotifications=()=>{return useContext(SystemNotificationsContext)};
//# sourceMappingURL=system-notification.js.map