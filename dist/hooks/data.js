import{useCallback,useEffect,useState}from"react";export const useCollectionManager=(ids,retriever)=>{const[entries,setEntries]=useState({});const update=useCallback(()=>{setEntries(prevState=>{const missingEntries=ids.filter(id=>!(id in prevState));if(missingEntries.length===0)return prevState;const getEntries=retriever(missingEntries);const newEntries={...prevState};missingEntries.forEach(entry=>newEntries[entry]=getEntries[entry]);return newEntries})},[ids,retriever]);const invalidate=useCallback(()=>{setEntries({});update()},[update]);useEffect(()=>{update()},[update]);return{entries,invalidate}};export const useCollectionEntryHandler=(entries,key)=>{const[status,setStatus]=useState({status:"loading"});useEffect(()=>{setStatus(prevState=>{if(!(key in entries))return{status:"loading"};const currentEntry=entries[key];if(currentEntry==null)return{status:"no-data"};currentEntry.then(()=>{setStatus({status:"success",data:entries[key]})}).catch(error=>{setStatus(prevState=>({status:"error",data:prevState.data,error}))});return prevState})},[entries,key]);return status};
//# sourceMappingURL=data.js.map