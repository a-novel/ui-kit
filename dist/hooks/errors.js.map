{"version":3,"sources":["../../src/hooks/errors.ts"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport { captureException, joinErrors } from \"@lib\";\n\n/**\n * <span style=\"color: #32adff;\">Trigger an exception capture every time the error is updated to a non-null value.</span>\n *\n * An optional condition can be added, to block unwanted captures.\n */\nexport const useCaptureException = (description: string, error: unknown, condition: boolean = true) => {\n  useEffect(() => {\n    if (!condition) return;\n    if (error != null) captureException(joinErrors(description, error));\n  }, [description, error, condition]);\n};\n\n/**\n * <span style=\"color: #32adff;\">Trigger an exception capture every time the description is updated to a non-null value.</span>\n *\n * An optional condition can be added, to block unwanted captures.\n */\nexport const useCaptureMessage = (description?: string, condition: boolean = true) => {\n  useEffect(() => {\n    if (!condition) return;\n    if (description != null) captureException(description);\n  }, [description, condition]);\n};\n"],"names":["useEffect","captureException","joinErrors","useCaptureException","description","error","condition","useCaptureMessage"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAQ,AAElC,QAASC,gBAAgB,CAAEC,UAAU,KAAQ,MAAO,AAOpD,QAAO,MAAMC,oBAAsB,CAACC,YAAqBC,MAAgBC,UAAqB,IAAI,IAChGN,UAAU,KACR,GAAI,CAACM,UAAW,OAChB,GAAID,OAAS,KAAMJ,iBAAiBC,WAAWE,YAAaC,OAC9D,EAAG,CAACD,YAAaC,MAAOC,UAAU,CACpC,CAAE,AAOF,QAAO,MAAMC,kBAAoB,CAACH,YAAsBE,UAAqB,IAAI,IAC/EN,UAAU,KACR,GAAI,CAACM,UAAW,OAChB,GAAIF,aAAe,KAAMH,iBAAiBG,YAC5C,EAAG,CAACA,YAAaE,UAAU,CAC7B,CAAE"}