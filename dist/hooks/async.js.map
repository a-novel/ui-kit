{"version":3,"sources":["../../src/hooks/async.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n/**\n * <span style=\"color: #32adff;\">Use state with async value loader.</span>\n *\n * Extract the value from the promise, and set it as the state value.\n */\nexport const useAsyncState = <T>(resolve: Promise<T>) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<unknown>();\n  const [value, setValue] = useState<T>();\n\n  useEffect(() => {\n    setLoading(true);\n    resolve\n      .then((value) => {\n        setError(undefined);\n        setValue(value);\n        setLoading(false);\n      })\n      .catch(setError);\n  }, [resolve]);\n\n  return [value, { loading, error }] as const;\n};\n"],"names":["useEffect","useState","useAsyncState","resolve","loading","setLoading","error","setError","value","setValue","then","undefined","catch"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAQ,AAO5C,QAAO,MAAMC,cAAgB,AAAIC,UAC/B,KAAM,CAACC,QAASC,WAAW,CAAGJ,SAAS,MACvC,KAAM,CAACK,MAAOC,SAAS,CAAGN,WAC1B,KAAM,CAACO,MAAOC,SAAS,CAAGR,WAE1BD,UAAU,KACRK,WAAW,MACXF,QACGO,IAAI,CAAC,AAACF,QACLD,SAASI,WACTF,SAASD,OACTH,WAAW,MACb,GACCO,KAAK,CAACL,SACX,EAAG,CAACJ,QAAQ,EAEZ,MAAO,CAACK,MAAO,CAAEJ,QAASE,KAAM,EAAE,AACpC,CAAE"}