{"version":3,"sources":["../../src/lib/url.ts"],"sourcesContent":["export interface MatchPathNameOptions {\n  /**\n   * <span style=\"color: #32adff;\">If true, current pathname must perfectly match the expected one.</span>\n   */\n  exact?: boolean;\n  /**\n   * <span style=\"color: #32adff;\">Exclude some paths from matching.</span>\n   *\n   * If a sub-path that would normally match should be excluded, add it to this list.\n   */\n  excludeSubPaths?: string[];\n}\n\n/**\n * <span style=\"color: #32adff;\">Check if a given pathname is active.</span>\n *\n * Wildcards can be used in the expected pathname.\n *\n * By default, sub-paths that extend the expected pathname will match.\n * Use the <span style=\"color: #ffd600;\">{@link MatchPathNameOptions}</span> to change this behavior.\n */\nexport const isPathnameActive = (pathName: string, expect: string, options?: MatchPathNameOptions) => {\n  // Split paths, to allow for wildcards and ignore trailing / leading slashes.\n  const pathBits = pathName.split(\"/\").filter((x) => x !== \"\");\n  const expectBits = expect.split(\"/\").filter((x) => x !== \"\");\n\n  if (options?.exact && pathBits.length !== expectBits.length) return false;\n\n  for (const expectedBit of expectBits) {\n    const pathBit = pathBits.shift();\n    if (expectedBit === \"*\") continue;\n    if (expectedBit !== pathBit) return false;\n  }\n\n  if (options?.excludeSubPaths) {\n    for (const subPath of options.excludeSubPaths) {\n      if (isPathnameActive(pathName, subPath)) return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["isPathnameActive","pathName","expect","options","pathBits","split","filter","x","expectBits","exact","length","expectedBit","pathBit","shift","excludeSubPaths","subPath"],"mappings":"AAqBA,OAAO,MAAMA,iBAAmB,CAACC,SAAkBC,OAAgBC,WAEjE,MAAMC,SAAWH,SAASI,KAAK,CAAC,KAAKC,MAAM,CAAC,AAACC,GAAMA,IAAM,IACzD,MAAMC,WAAaN,OAAOG,KAAK,CAAC,KAAKC,MAAM,CAAC,AAACC,GAAMA,IAAM,IAEzD,GAAIJ,SAASM,OAASL,SAASM,MAAM,GAAKF,WAAWE,MAAM,CAAE,OAAO,MAEpE,IAAK,MAAMC,eAAeH,WAAY,CACpC,MAAMI,QAAUR,SAASS,KAAK,GAC9B,GAAIF,cAAgB,IAAK,SACzB,GAAIA,cAAgBC,QAAS,OAAO,KACtC,CAEA,GAAIT,SAASW,gBAAiB,CAC5B,IAAK,MAAMC,WAAWZ,QAAQW,eAAe,CAAE,CAC7C,GAAId,iBAAiBC,SAAUc,SAAU,OAAO,KAClD,CACF,CAEA,OAAO,IACT,CAAE"}