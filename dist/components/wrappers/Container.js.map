{"version":3,"sources":["../../../src/components/wrappers/Container.tsx"],"sourcesContent":["import css from \"./Container.module.css\";\n\nimport { CSSProperties, ForwardedRef, RefAttributes, forwardRef } from \"react\";\n\nimport { Color } from \"@components/common\";\n\nimport IntrinsicElements = JSX.IntrinsicElements;\n\nexport type Spacing = \"small\" | \"normal\" | \"large\";\n\nexport type Radius = \"small\" | \"normal\" | \"large\";\n\nexport type Scale = \"full\";\n\ntype ReactComponent = keyof IntrinsicElements;\n\nexport type ContainerProps<C extends ReactComponent = ReactComponent> = Omit<IntrinsicElements[C], \"ref\"> & {\n  /**\n   * <span style=\"color: #32adff;\">Orientation of the content.</span>\n   *\n   * Default to \"bottom right\".\n   */\n  orientation: \"horizontal\" | \"vertical\";\n  /**\n   * <span style=\"color: #32adff;\">Gap between the children.</span>\n   *\n   * You can use a number (rem), or any valid css value. If true is given, then the value of\n   * <span style=\"color: #ffd600;\">{@link spacing}</span> will be used, if provided.\n   */\n  gap?: number | string | Spacing | true;\n  /**\n   * <span style=\"color: #32adff;\">Padding around the children.</span>\n   *\n   * You can use a number (rem), or any valid css value. If true is given, then the value of\n   * <span style=\"color: #ffd600;\">{@link spacing}</span> will be used, if provided.\n   */\n  padding?: number | string | Spacing | true;\n  /**\n   * <span style=\"color: #32adff;\">Margin around the container.</span>\n   *\n   * You can use a number (rem), or any valid css value. If true is given, then the value of\n   * <span style=\"color: #ffd600;\">{@link spacing}</span> will be used, if provided.\n   */\n  margin?: number | string | Spacing | true;\n  /**\n   * <span style=\"color: #32adff;\">Generic spacing value.</span>\n   *\n   * If set, this value is automatically applied to <span style=\"color: #ffd600;\">{@link gap}</span> and\n   * <span style=\"color: #ffd600;\">{@link padding}</span> if they are set to true.\n   *\n   * You can use a number (rem), or any valid css value.\n   */\n  spacing?: number | string | Spacing;\n  /**\n   * <span style=\"color: #32adff;\">Width of the content.</span>\n   *\n   * Default to \"left\".\n   */\n  align?:\n    | \"top left\"\n    | \"center left\"\n    | \"bottom left\"\n    | \"top center\"\n    | \"center\"\n    | \"bottom center\"\n    | \"top right\"\n    | \"center right\"\n    | \"bottom right\";\n  /**\n   * <span style=\"color: #32adff;\">Radius of the corners.</span>\n   *\n   * You can use a number (rem), or any valid css value.\n   */\n  radius?: number | string | Radius;\n\n  /**\n   * <span style=\"color: #32adff;\">Width of the container.</span>\n   *\n   * You can use a number (rem), or any valid css value.\n   */\n  width?: number | string | Scale;\n  /**\n   * <span style=\"color: #32adff;\">Height of the container.</span>\n   *\n   * You can use a number (rem), or any valid css value.\n   */\n  height?: number | string | Scale;\n\n  /**\n   * <span style=\"color: #32adff;\">Wrap overflowing content.</span>\n   */\n  wrap?: boolean;\n  /**\n   * <span style=\"color: #32adff;\">Custom tag to use for rendering the element.</span>\n   *\n   * It must match an existing HTML tag.\n   */\n  tag?: C;\n\n  /**\n   * <span style=\"color: #32adff;\">Apply the flexbox grow property.</span>\n   *\n   * The parent must be a flexbox for this to work.\n   */\n  grow?: boolean;\n  /**\n   * <span style=\"color: #32adff;\">ZIndex of the element.</span>\n   */\n  zIndex?: number;\n  /**\n   * <span style=\"color: #32adff;\">Background of the element.</span>\n   */\n  background?: Color | \"blurry\" | \"plain\";\n  /**\n   * <span style=\"color: #32adff;\">Border of the element.</span>\n   *\n   * If a boolean is given, border color is automatically matched with the background color.\n   */\n  border?: Color | \"default\" | true;\n  /**\n   * <span style=\"color: #32adff;\">Align the content of the element.</span>\n   */\n  selfAlign?: CSSProperties[\"justifyContent\"];\n\n  className?: string;\n  style?: CSSProperties;\n};\n\nconst computeSpacing = (src: number | string | Spacing | undefined): string | undefined => {\n  if (!src) {\n    return undefined;\n  }\n\n  return typeof src === \"number\"\n    ? `${src}rem`\n    : src.replaceAll(\"small\", \"0.3rem\").replaceAll(\"normal\", \"0.6rem\").replaceAll(\"large\", \"0.9rem\");\n};\n\nconst computeDimension = (src: number | string | Scale | undefined): string | undefined => {\n  if (!src) {\n    return undefined;\n  }\n\n  switch (src) {\n    case \"full\":\n      return \"100%\";\n    default:\n      return typeof src === \"number\" ? `${src}rem` : src;\n  }\n};\n\nconst computeRadius = (src: number | string | Radius | undefined): string | undefined => {\n  if (!src) {\n    return undefined;\n  }\n\n  return typeof src === \"number\"\n    ? `${src}rem`\n    : src.replaceAll(\"small\", \"0.3rem\").replaceAll(\"normal\", \"0.6rem\").replaceAll(\"large\", \"0.9rem\");\n};\n\nconst computeBorder = (src: ContainerProps[\"border\"], bg: ContainerProps[\"background\"]): CSSProperties => {\n  if (src == null) {\n    return {};\n  }\n\n  // Automatically assign border color by default, depending on the background color.\n  if (src === true) {\n    src = [\"blue\", \"red\", \"green\", \"gold\", \"purple\", \"orange\"].includes(bg as string)\n      ? (bg as ContainerProps[\"border\"])\n      : \"default\";\n  }\n\n  switch (src) {\n    case \"default\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--color-border-box)\",\n      };\n    case \"blue\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--blue)\",\n      };\n    case \"red\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--red)\",\n      };\n    case \"green\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--green)\",\n      };\n    case \"gold\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--gold)\",\n      };\n    case \"purple\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--purple)\",\n      };\n    case \"orange\":\n      return {\n        borderStyle: \"solid\",\n        borderWidth: \"thin\",\n        borderColor: \"var(--orange)\",\n      };\n    default:\n      return {};\n  }\n};\n\nconst computeBackground = (src: ContainerProps[\"background\"]): CSSProperties => {\n  if (!src) {\n    return {};\n  }\n\n  switch (src) {\n    case \"blue\":\n      return { backgroundColor: \"var(--blue-dark)\" };\n    case \"red\":\n      return { backgroundColor: \"var(--red-dark)\" };\n    case \"green\":\n      return { backgroundColor: \"var(--green-dark)\" };\n    case \"gold\":\n      return { backgroundColor: \"var(--gold-dark)\" };\n    case \"purple\":\n      return { backgroundColor: \"var(--purple-dark)\" };\n    case \"orange\":\n      return { backgroundColor: \"var(--orange-dark)\" };\n    case \"plain\":\n      return { backgroundColor: \"var(--color-background)\" };\n    default:\n      return {};\n  }\n};\n\nconst computeAlign = (src: ContainerProps[\"align\"]): string | undefined => {\n  let hAlign, vAlign;\n\n  switch (src) {\n    case \"top left\":\n      hAlign = css.hLeft;\n      vAlign = css.vTop;\n      break;\n    case \"center left\":\n      hAlign = css.hLeft;\n      vAlign = css.vCenter;\n      break;\n    case \"bottom left\":\n      hAlign = css.hLeft;\n      vAlign = css.vBottom;\n      break;\n    case \"top center\":\n      hAlign = css.hCenter;\n      vAlign = css.vTop;\n      break;\n    case \"center\":\n      hAlign = css.hCenter;\n      vAlign = css.vCenter;\n      break;\n    case \"bottom center\":\n      hAlign = css.hCenter;\n      vAlign = css.vBottom;\n      break;\n    case \"top right\":\n      hAlign = css.hRight;\n      vAlign = css.vTop;\n      break;\n    case \"center right\":\n      hAlign = css.hRight;\n      vAlign = css.vCenter;\n      break;\n    case \"bottom right\":\n      hAlign = css.hRight;\n      vAlign = css.vBottom;\n      break;\n    default:\n      return;\n  }\n\n  return `${hAlign} ${vAlign}`;\n};\n\nfunction ContainerForwarded<C extends ReactComponent = \"div\", T = unknown>(\n  {\n    orientation,\n    gap,\n    padding,\n    margin,\n    spacing,\n    align,\n    width,\n    height,\n    wrap,\n    tag: Tag,\n    grow,\n    zIndex,\n    background,\n    radius,\n    border,\n    selfAlign,\n    className,\n    style,\n    ...props\n  }: ContainerProps<C>,\n  externalRef: ForwardedRef<T>,\n) {\n  const ActualTag = (Tag ?? \"div\") as C;\n\n  const computedStyle = Object.assign(\n    {\n      display: \"flex\",\n      flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n      gap: computeSpacing(gap === true ? spacing : gap),\n      padding: computeSpacing(padding === true ? spacing : padding),\n      margin: computeSpacing(margin === true ? spacing : margin),\n      width: computeDimension(width),\n      height: computeDimension(height),\n      flexWrap: wrap ? \"wrap\" : \"nowrap\",\n      flexGrow: grow ? 1 : undefined,\n      flexShrink: grow ? undefined : 0,\n      boxSizing: \"border-box\",\n      zIndex,\n      justifyContent: selfAlign,\n      borderRadius: computeRadius(radius),\n      ...computeBackground(background),\n      ...computeBorder(border, background),\n    },\n    style,\n  );\n\n  const computedClassname = [computeAlign(align), background === \"blurry\" ? css.blurry : undefined, className]\n    .filter((x) => !!x)\n    .join(\" \");\n\n  // Typescript is struggling with all the juggling types, so we do an exception and ignore\n  // it for now.\n  return (\n    // @ts-ignore\n    <ActualTag\n      // @ts-ignore\n      data-orientation={orientation}\n      data-bg={background}\n      // @ts-ignore\n      style={computedStyle}\n      // @ts-ignore\n      className={computedClassname}\n      // @ts-ignore\n      ref={externalRef}\n      // @ts-ignore\n      {...props}\n    />\n  );\n}\n\nexport const Container = forwardRef(ContainerForwarded) as <C extends ReactComponent = \"div\", T = unknown>(\n  props: ContainerProps<C> & RefAttributes<T>,\n) => ReturnType<typeof ContainerForwarded>;\n"],"names":["css","forwardRef","computeSpacing","src","undefined","replaceAll","computeDimension","computeRadius","computeBorder","bg","includes","borderStyle","borderWidth","borderColor","computeBackground","backgroundColor","computeAlign","hAlign","vAlign","hLeft","vTop","vCenter","vBottom","hCenter","hRight","ContainerForwarded","orientation","gap","padding","margin","spacing","align","width","height","wrap","tag","Tag","grow","zIndex","background","radius","border","selfAlign","className","style","props","externalRef","ActualTag","computedStyle","Object","assign","display","flexDirection","flexWrap","flexGrow","flexShrink","boxSizing","justifyContent","borderRadius","computedClassname","blurry","filter","x","join","data-orientation","data-bg","ref","Container"],"mappings":"0CAAA,QAAOA,QAAS,wBAAyB,AAEzC,QAAqDC,UAAU,KAAQ,OAAQ,CA8H/E,MAAMC,eAAiB,AAACC,MACtB,GAAI,CAACA,IAAK,CACR,OAAOC,SACT,CAEA,OAAO,OAAOD,MAAQ,SAClB,CAAC,EAAEA,IAAI,GAAG,CAAC,CACXA,IAAIE,UAAU,CAAC,QAAS,UAAUA,UAAU,CAAC,SAAU,UAAUA,UAAU,CAAC,QAAS,SAC3F,EAEA,MAAMC,iBAAmB,AAACH,MACxB,GAAI,CAACA,IAAK,CACR,OAAOC,SACT,CAEA,OAAQD,KACN,IAAK,OACH,MAAO,MACT,SACE,OAAO,OAAOA,MAAQ,SAAW,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAGA,GACnD,CACF,EAEA,MAAMI,cAAgB,AAACJ,MACrB,GAAI,CAACA,IAAK,CACR,OAAOC,SACT,CAEA,OAAO,OAAOD,MAAQ,SAClB,CAAC,EAAEA,IAAI,GAAG,CAAC,CACXA,IAAIE,UAAU,CAAC,QAAS,UAAUA,UAAU,CAAC,SAAU,UAAUA,UAAU,CAAC,QAAS,SAC3F,EAEA,MAAMG,cAAgB,CAACL,IAA+BM,MACpD,GAAIN,KAAO,KAAM,CACf,MAAO,CAAC,CACV,CAGA,GAAIA,MAAQ,KAAM,CAChBA,IAAM,CAAC,OAAQ,MAAO,QAAS,OAAQ,SAAU,SAAS,CAACO,QAAQ,CAACD,IAC/DA,GACD,SACN,CAEA,OAAQN,KACN,IAAK,UACH,MAAO,CACLQ,YAAa,QACbC,YAAa,OACbC,YAAa,yBACf,CACF,KAAK,OACH,MAAO,CACLF,YAAa,QACbC,YAAa,OACbC,YAAa,aACf,CACF,KAAK,MACH,MAAO,CACLF,YAAa,QACbC,YAAa,OACbC,YAAa,YACf,CACF,KAAK,QACH,MAAO,CACLF,YAAa,QACbC,YAAa,OACbC,YAAa,cACf,CACF,KAAK,OACH,MAAO,CACLF,YAAa,QACbC,YAAa,OACbC,YAAa,aACf,CACF,KAAK,SACH,MAAO,CACLF,YAAa,QACbC,YAAa,OACbC,YAAa,eACf,CACF,KAAK,SACH,MAAO,CACLF,YAAa,QACbC,YAAa,OACbC,YAAa,eACf,CACF,SACE,MAAO,CAAC,CACZ,CACF,EAEA,MAAMC,kBAAoB,AAACX,MACzB,GAAI,CAACA,IAAK,CACR,MAAO,CAAC,CACV,CAEA,OAAQA,KACN,IAAK,OACH,MAAO,CAAEY,gBAAiB,kBAAmB,CAC/C,KAAK,MACH,MAAO,CAAEA,gBAAiB,iBAAkB,CAC9C,KAAK,QACH,MAAO,CAAEA,gBAAiB,mBAAoB,CAChD,KAAK,OACH,MAAO,CAAEA,gBAAiB,kBAAmB,CAC/C,KAAK,SACH,MAAO,CAAEA,gBAAiB,oBAAqB,CACjD,KAAK,SACH,MAAO,CAAEA,gBAAiB,oBAAqB,CACjD,KAAK,QACH,MAAO,CAAEA,gBAAiB,yBAA0B,CACtD,SACE,MAAO,CAAC,CACZ,CACF,EAEA,MAAMC,aAAe,AAACb,MACpB,IAAIc,OAAQC,OAEZ,OAAQf,KACN,IAAK,WACHc,OAASjB,IAAImB,KAAK,CAClBD,OAASlB,IAAIoB,IAAI,CACjB,KACF,KAAK,cACHH,OAASjB,IAAImB,KAAK,CAClBD,OAASlB,IAAIqB,OAAO,CACpB,KACF,KAAK,cACHJ,OAASjB,IAAImB,KAAK,CAClBD,OAASlB,IAAIsB,OAAO,CACpB,KACF,KAAK,aACHL,OAASjB,IAAIuB,OAAO,CACpBL,OAASlB,IAAIoB,IAAI,CACjB,KACF,KAAK,SACHH,OAASjB,IAAIuB,OAAO,CACpBL,OAASlB,IAAIqB,OAAO,CACpB,KACF,KAAK,gBACHJ,OAASjB,IAAIuB,OAAO,CACpBL,OAASlB,IAAIsB,OAAO,CACpB,KACF,KAAK,YACHL,OAASjB,IAAIwB,MAAM,CACnBN,OAASlB,IAAIoB,IAAI,CACjB,KACF,KAAK,eACHH,OAASjB,IAAIwB,MAAM,CACnBN,OAASlB,IAAIqB,OAAO,CACpB,KACF,KAAK,eACHJ,OAASjB,IAAIwB,MAAM,CACnBN,OAASlB,IAAIsB,OAAO,CACpB,KACF,SACE,MACJ,CAEA,MAAO,CAAC,EAAEL,OAAO,CAAC,EAAEC,OAAO,CAAC,AAC9B,EAEA,SAASO,mBACP,CACEC,WAAW,CACXC,GAAG,CACHC,OAAO,CACPC,MAAM,CACNC,OAAO,CACPC,KAAK,CACLC,KAAK,CACLC,MAAM,CACNC,IAAI,CACJC,IAAKC,GAAG,CACRC,IAAI,CACJC,MAAM,CACNC,UAAU,CACVC,MAAM,CACNC,MAAM,CACNC,SAAS,CACTC,SAAS,CACTC,KAAK,CACL,GAAGC,MACe,CACpBC,WAA4B,EAE5B,MAAMC,UAAaX,KAAO,MAE1B,MAAMY,cAAgBC,OAAOC,MAAM,CACjC,CACEC,QAAS,OACTC,cAAe1B,cAAgB,WAAa,SAAW,MACvDC,IAAKzB,eAAeyB,MAAQ,KAAOG,QAAUH,KAC7CC,QAAS1B,eAAe0B,UAAY,KAAOE,QAAUF,SACrDC,OAAQ3B,eAAe2B,SAAW,KAAOC,QAAUD,QACnDG,MAAO1B,iBAAiB0B,OACxBC,OAAQ3B,iBAAiB2B,QACzBoB,SAAUnB,KAAO,OAAS,SAC1BoB,SAAUjB,KAAO,EAAIjC,UACrBmD,WAAYlB,KAAOjC,UAAY,EAC/BoD,UAAW,aACXlB,OACAmB,eAAgBf,UAChBgB,aAAcnD,cAAciC,QAC5B,GAAG1B,kBAAkByB,WAAW,CAChC,GAAG/B,cAAciC,OAAQF,WAAW,AACtC,EACAK,OAGF,MAAMe,kBAAoB,CAAC3C,aAAae,OAAQQ,aAAe,SAAWvC,IAAI4D,MAAM,CAAGxD,UAAWuC,UAAU,CACzGkB,MAAM,CAAC,AAACC,GAAM,CAAC,CAACA,GAChBC,IAAI,CAAC,KAIR,OAEE,KAAChB,WAECiB,mBAAkBtC,YAClBuC,UAAS1B,WAETK,MAAOI,cAEPL,UAAWgB,kBAEXO,IAAKpB,YAEJ,GAAGD,KAAK,EAGf,CAEA,OAAO,MAAMsB,UAAYlE,WAAWwB,mBAEO"}