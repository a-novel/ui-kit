import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from"react/jsx-runtime";import{forwardRef,useEffect,useMemo,useState}from"react";import{WindowProvider,useWindow}from"@contexts";import{setRefs}from"@lib";import{createPortal}from"react-dom";export const IFrame=forwardRef(function({children,style,...props},externalRef){const[contentRef,setContentRef]=useState(null);const headNode=useMemo(()=>contentRef?.contentWindow?.document?.head,[contentRef]);const mountNode=useMemo(()=>contentRef?.contentWindow?.document?.body,[contentRef]);const{document}=useWindow();useEffect(()=>{if(mountNode){mountNode.style.margin="0";mountNode.style.padding="0";mountNode.style.minHeight="100vh";mountNode.style.width="100vw";mountNode.style.display="flex";mountNode.style.flexDirection="column"}},[mountNode]);useEffect(()=>{if(document==null)return;if(headNode){for(const style of Array.from(document.head.querySelectorAll("link"))){headNode.appendChild(style.cloneNode(true))}for(const style of Array.from(document.head.querySelectorAll("style"))){headNode.appendChild(style.cloneNode(true))}}},[headNode,document]);return _jsxs(_Fragment,{children:[_jsx("iframe",{...props,style:{border:"none",...style},ref:setRefs(setContentRef,externalRef)}),mountNode?createPortal(_jsx(WindowProvider,{window:contentRef.contentWindow,document:contentRef.contentWindow.document,children:children}),mountNode):null]})});
//# sourceMappingURL=IFrame.js.map