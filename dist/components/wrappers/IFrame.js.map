{"version":3,"sources":["../../../src/components/wrappers/IFrame.tsx"],"sourcesContent":["import { DetailedHTMLProps, IframeHTMLAttributes, forwardRef, useEffect, useMemo, useState } from \"react\";\n\nimport { WindowProvider, useWindow } from \"@contexts\";\nimport { setRefs } from \"@lib\";\nimport { createPortal } from \"react-dom\";\n\n/**\n * <span style=\"color: #32adff;\">React iframe wrapper.</span>\n *\n * Allows to set the content of the iframe from React.\n */\nexport const IFrame = forwardRef<\n  HTMLIFrameElement,\n  DetailedHTMLProps<IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>\n>(function ({ children, style, ...props }, externalRef) {\n  const [contentRef, setContentRef] = useState<HTMLIFrameElement | null>(null);\n  const headNode = useMemo(() => contentRef?.contentWindow?.document?.head, [contentRef]);\n  const mountNode = useMemo(() => contentRef?.contentWindow?.document?.body, [contentRef]);\n\n  const { document } = useWindow();\n\n  // Setup body.\n  useEffect(() => {\n    if (mountNode) {\n      // Assign default styling.\n      mountNode.style.margin = \"0\";\n      mountNode.style.padding = \"0\";\n      mountNode.style.minHeight = \"100vh\";\n      mountNode.style.width = \"100vw\";\n      mountNode.style.display = \"flex\";\n      mountNode.style.flexDirection = \"column\";\n    }\n  }, [mountNode]);\n\n  // Setup head.\n  useEffect(() => {\n    if (document == null) return;\n\n    if (headNode) {\n      // Inherit parent styles (like compiled css modules or local fonts).\n      for (const style of Array.from(document.head.querySelectorAll(\"link\"))) {\n        headNode.appendChild(style.cloneNode(true));\n      }\n      for (const style of Array.from(document.head.querySelectorAll(\"style\"))) {\n        headNode.appendChild(style.cloneNode(true));\n      }\n    }\n  }, [headNode, document]);\n\n  return (\n    <>\n      <iframe\n        {...props}\n        style={{ border: \"none\", ...style }}\n        ref={setRefs<HTMLIFrameElement>(setContentRef, externalRef)}\n      />\n      {mountNode\n        ? createPortal(\n            <WindowProvider window={contentRef!.contentWindow!} document={contentRef!.contentWindow!.document!}>\n              {children}\n            </WindowProvider>,\n            mountNode,\n          )\n        : null}\n    </>\n  );\n});\n"],"names":["forwardRef","useEffect","useMemo","useState","WindowProvider","useWindow","setRefs","createPortal","IFrame","children","style","props","externalRef","contentRef","setContentRef","headNode","contentWindow","document","head","mountNode","body","margin","padding","minHeight","width","display","flexDirection","Array","from","querySelectorAll","appendChild","cloneNode","iframe","border","ref","window"],"mappings":"8EAAA,QAAkDA,UAAU,CAAEC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAQ,AAE1G,QAASC,cAAc,CAAEC,SAAS,KAAQ,WAAY,AACtD,QAASC,OAAO,KAAQ,MAAO,AAC/B,QAASC,YAAY,KAAQ,WAAY,AAOzC,QAAO,MAAMC,OAASR,WAGpB,SAAU,CAAES,QAAQ,CAAEC,KAAK,CAAE,GAAGC,MAAO,CAAEC,WAAW,EACpD,KAAM,CAACC,WAAYC,cAAc,CAAGX,SAAmC,MACvE,MAAMY,SAAWb,QAAQ,IAAMW,YAAYG,eAAeC,UAAUC,KAAM,CAACL,WAAW,EACtF,MAAMM,UAAYjB,QAAQ,IAAMW,YAAYG,eAAeC,UAAUG,KAAM,CAACP,WAAW,EAEvF,KAAM,CAAEI,QAAQ,CAAE,CAAGZ,YAGrBJ,UAAU,KACR,GAAIkB,UAAW,CAEbA,UAAUT,KAAK,CAACW,MAAM,CAAG,GACzBF,CAAAA,UAAUT,KAAK,CAACY,OAAO,CAAG,GAC1BH,CAAAA,UAAUT,KAAK,CAACa,SAAS,CAAG,OAC5BJ,CAAAA,UAAUT,KAAK,CAACc,KAAK,CAAG,OACxBL,CAAAA,UAAUT,KAAK,CAACe,OAAO,CAAG,MAC1BN,CAAAA,UAAUT,KAAK,CAACgB,aAAa,CAAG,QAClC,CACF,EAAG,CAACP,UAAU,EAGdlB,UAAU,KACR,GAAIgB,UAAY,KAAM,OAEtB,GAAIF,SAAU,CAEZ,IAAK,MAAML,SAASiB,MAAMC,IAAI,CAACX,SAASC,IAAI,CAACW,gBAAgB,CAAC,SAAU,CACtEd,SAASe,WAAW,CAACpB,MAAMqB,SAAS,CAAC,MACvC,CACA,IAAK,MAAMrB,SAASiB,MAAMC,IAAI,CAACX,SAASC,IAAI,CAACW,gBAAgB,CAAC,UAAW,CACvEd,SAASe,WAAW,CAACpB,MAAMqB,SAAS,CAAC,MACvC,CACF,CACF,EAAG,CAAChB,SAAUE,SAAS,EAEvB,OACE,2BACE,KAACe,UACE,GAAGrB,KAAK,CACTD,MAAO,CAAEuB,OAAQ,OAAQ,GAAGvB,KAAK,AAAC,EAClCwB,IAAK5B,QAA2BQ,cAAeF,eAEhDO,UACGZ,aACE,KAACH,gBAAe+B,OAAQtB,WAAYG,aAAa,CAAGC,SAAUJ,WAAYG,aAAa,CAAEC,QAAQ,UAC9FR,WAEHU,WAEF,OAGV,EAAG"}