{"version":3,"sources":["../../../src/components/wrappers/Icon.tsx"],"sourcesContent":["import css from \"./Icon.module.css\";\n\nimport { CSSProperties, DetailedHTMLProps, HTMLAttributes, forwardRef } from \"react\";\n\nexport interface IconProps extends DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLDivElement> {\n  /**\n   * <span style=\"color: #32adff;\">Scale the icon.</span>\n   *\n   * If a number is given, the icon will be scaled by that factor relatively to the local font size (em).\n   *\n   * You can also pass any valid CSS length value.\n   */\n  scale?: number | string;\n  /**\n   * <span style=\"color: #32adff;\">Set the scaling method for the icon.</span>\n   *\n   * You can choose \"horizontal\" or \"vertical\" to determine on which dimension the\n   * <span style=\"color: #ffd600;\">{@link scale}</span> will apply.\n   *\n   * \"square\" is a special value, that sets both dimensions to the same value.\n   */\n  scalingMethod?: \"vertical\" | \"horizontal\" | \"square\";\n}\n\n/**\n * <span style=\"color: #32adff;\">Wrap an SVG icon element.</span>\n *\n * This wrapper is used to control the behavior of inline SVG elements.\n * It automatically scales the icon depending on props.\n *\n * You can use this component with lottie icons. To ensure compatibility, make sure the following property is present\n * on the lottie player: <span style=\"color: #ff9300;\">rendererSettings={{ viewBoxOnly: true }}</span>.\n */\nexport const Icon = forwardRef<HTMLSpanElement, IconProps>(function IconWrapper(\n  { className, style, scale, scalingMethod, ...props },\n  externalRef,\n) {\n  return (\n    <span\n      ref={externalRef}\n      data-icon={true}\n      style={\n        {\n          \"--scale\": scale && (typeof scale === \"number\" ? `${scale}em` : scale),\n          ...style,\n        } as CSSProperties\n      }\n      className={`${css.wrapper} ${css[scalingMethod ?? \"vertical\"]} ${className ?? \"\"}`}\n      {...props}\n    />\n  );\n});\n\nIcon.defaultProps = {\n  scale: 1,\n  scalingMethod: \"vertical\",\n};\n"],"names":["css","forwardRef","Icon","IconWrapper","className","style","scale","scalingMethod","props","externalRef","span","ref","data-icon","wrapper","defaultProps"],"mappings":"0CAAA,QAAOA,QAAS,mBAAoB,AAEpC,QAA2DC,UAAU,KAAQ,OAAQ,AA+BrF,QAAO,MAAMC,KAAOD,WAAuC,SAASE,YAClE,CAAEC,SAAS,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAa,CAAE,GAAGC,MAAO,CACpDC,WAAW,EAEX,OACE,KAACC,QACCC,IAAKF,YACLG,YAAW,KACXP,MACE,CACE,UAAWC,OAAU,CAAA,OAAOA,QAAU,SAAW,CAAC,EAAEA,MAAM,EAAE,CAAC,CAAGA,KAAI,EACpE,GAAGD,KAAK,AACV,EAEFD,UAAW,CAAC,EAAEJ,IAAIa,OAAO,CAAC,CAAC,EAAEb,GAAG,CAACO,eAAiB,WAAW,CAAC,CAAC,EAAEH,WAAa,GAAG,CAAC,CACjF,GAAGI,KAAK,EAGf,EAAG,AAEHN,CAAAA,KAAKY,YAAY,CAAG,CAClBR,MAAO,EACPC,cAAe,UACjB"}