import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from"react/jsx-runtime";import css from"./SystemNotifications.module.css";import NotificationsEmptyIcon from"@assets/icons/monochrome/notifications-off.svg";import{forwardRef,useMemo,useState}from"react";import{JSX}from"react/jsx-runtime";import Link from"next/link";import{Modal}from"@components/layouts";import{useSystemNotifications}from"@contexts";export const SystemNotification=forwardRef(function SystemNotification({notification},externalRef){const[openInfos,setOpenInfos]=useState(false);const isInteractive=notification.context.modal!=null||notification.context.href!=null;const wrapperClassname=`
    ${css.notificationContainer} 
    ${css[notification.meta.color]} 
    ${isInteractive?css.interactive:""}
  `;const content=_jsxs(_Fragment,{children:[_jsx("div",{className:css.notificationIcon,children:notification.context.icon}),_jsxs("div",{className:css.notificationText,children:[_jsx("div",{className:css.notificationTitle,children:notification.context.title}),_jsx("div",{className:css.notificationBody,children:notification.context.content})]})]});if(notification.context.href!=null){return _jsx(Link,{ref:externalRef,href:notification.context.href,className:wrapperClassname,children:content})}return _jsxs(_Fragment,{children:[_jsx("div",{ref:externalRef,onClick:notification.context.modal&&(()=>setOpenInfos(true)),className:wrapperClassname,children:content}),notification.context.modal&&_jsx(Modal,{...notification.context.modal,onClose:()=>setOpenInfos(false),opened:openInfos})]})});export const SystemNotificationsList=forwardRef(function NotificationsList({className,...props},externalRef){return _jsx("div",{ref:externalRef,className:`${css.notificationsList} ${className??""}`,...props})});export const SystemNotificationsCategory=forwardRef(function SystemNotificationsCategory({notifications,title},externalRef){const notificationsCount=useMemo(()=>Object.keys(notifications).length,[notifications]);const renderedNotifications=useMemo(()=>Object.entries(notifications).map(([key,notification])=>_jsx(SystemNotification,{notification:notification},key)),[notifications]);if(notificationsCount===0)return null;return _jsxs("div",{ref:externalRef,className:css.notificationsCategory,children:[_jsxs("div",{className:css.notificationsCategoryTitle,children:[title," - ",notificationsCount]}),_jsx(SystemNotificationsList,{children:renderedNotifications})]})});const SystemNotificationsPlaceholder=forwardRef(function NotificationsPlaceholder({placeholderText},externalRef){return _jsxs("div",{ref:externalRef,className:css.notificationsContainerPlaceholder,children:[_jsx("div",{className:css.notificationsPlaceholderIcon,children:_jsx(NotificationsEmptyIcon,{})}),_jsx("div",{className:css.notificationsPlaceholderText,children:placeholderText})]})});export const SystemNotificationsMenu=forwardRef(function SystemNotificationsMenu({},externalRef){const{notifications,updateNotification}=useSystemNotifications();return null});
//# sourceMappingURL=SystemNotifications.js.map