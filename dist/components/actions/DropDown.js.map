{"version":3,"sources":["../../../src/components/actions/DropDown.tsx"],"sourcesContent":["import css from \"./DropDown.module.css\";\n\nimport { CSSProperties, MouseEvent, ReactNode, Ref, forwardRef, useCallback, useMemo, useState } from \"react\";\n\nimport { NavButton, NavButtonProps } from \"@components/actions/NavButton\";\nimport { Container } from \"@components/wrappers\";\nimport { useClickAnywhere } from \"@hooks\";\nimport { isInTarget, setRefs } from \"@lib\";\n\nexport type DropDownProps = Omit<NavButtonProps, \"active\" | \"onClick\"> & {\n  /**\n   * <span style=\"color: #32adff;\">The content of the drop-down menu.</span>\n   */\n  dropDownMenu: ReactNode;\n  dropDownMenuRef?: Ref<HTMLDivElement>;\n  /**\n   * <span style=\"color: #32adff;\">Where the drop down menu should appear.</span>\n   *\n   * Default to \"bottom right\".\n   */\n  float?: \"top left\" | \"top right\" | \"bottom left\" | \"bottom right\";\n  onClick?: (e: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>, opened?: boolean) => void;\n};\n\nconst computeDropDownMenuStyle = (float: DropDownProps[\"float\"]) => {\n  const [vertical, horizontal] = (float ?? \"bottom right\").split(\" \");\n  const style: CSSProperties = {};\n\n  if (vertical === \"bottom\") {\n    style.top = \"100%\";\n    style.marginTop = \"var(--menu-offset)\";\n    style.transformOrigin = \"top\";\n  } else {\n    style.bottom = \"100%\";\n    style.marginBottom = \"var(--menu-offset)\";\n    style.transformOrigin = \"bottom\";\n  }\n\n  if (horizontal === \"right\") {\n    style.right = 0;\n  } else {\n    style.left = 0;\n  }\n\n  return style;\n};\n\n/**\n * <span style=\"color: #32adff;\">A drop-down menu component.</span>\n */\nexport const DropDown = forwardRef<HTMLButtonElement, DropDownProps>(function DropDown(\n  { children, className, dropDownMenu, dropDownMenuRef, onClick, float, ...props },\n  externalRef,\n) {\n  const [opened, setOpened] = useState(false);\n  const [buttonLocalRef, setButtonLocalRef] = useState<HTMLButtonElement | null>(null);\n  const [dropDownMenuLocalRef, setDropDownMenuLocalRef] = useState<HTMLDivElement | null>(null);\n\n  const excluded = useMemo(() => [buttonLocalRef], [buttonLocalRef]);\n  const closeDropDownMenu = useCallback(() => setOpened(false), []);\n  useClickAnywhere(closeDropDownMenu, excluded);\n\n  return (\n    <div className={`${css.dropDown} ${opened ? css.opened : css.closed} ${className ?? \"\"}`}>\n      <NavButton\n        active={opened}\n        // @ts-ignore\n        ref={setRefs(setButtonLocalRef, externalRef)}\n        onClick={(e) => {\n          if (isInTarget(e, { allow: [dropDownMenuLocalRef] })) return;\n          setOpened(!opened);\n          onClick?.(e, !opened);\n        }}\n        {...props}\n      >\n        {children}\n      </NavButton>\n      <Container\n        orientation=\"vertical\"\n        background=\"blurry\"\n        border\n        radius=\"normal\"\n        margin=\"normal\"\n        style={computeDropDownMenuStyle(float)}\n        ref={setRefs(setDropDownMenuLocalRef, dropDownMenuRef)}\n        className={css.dropDownMenu}\n      >\n        {dropDownMenu}\n      </Container>\n    </div>\n  );\n});\n\nDropDown.defaultProps = {\n  float: \"bottom right\",\n};\n"],"names":["css","forwardRef","useCallback","useMemo","useState","NavButton","Container","useClickAnywhere","isInTarget","setRefs","computeDropDownMenuStyle","float","vertical","horizontal","split","style","top","marginTop","transformOrigin","bottom","marginBottom","right","left","DropDown","children","className","dropDownMenu","dropDownMenuRef","onClick","props","externalRef","opened","setOpened","buttonLocalRef","setButtonLocalRef","dropDownMenuLocalRef","setDropDownMenuLocalRef","excluded","closeDropDownMenu","div","dropDown","closed","active","ref","e","allow","orientation","background","border","radius","margin","defaultProps"],"mappings":"wDAAA,QAAOA,QAAS,uBAAwB,AAExC,QAAoDC,UAAU,CAAEC,WAAW,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAQ,AAE9G,QAASC,SAAS,KAAwB,+BAAgC,AAC1E,QAASC,SAAS,KAAQ,sBAAuB,AACjD,QAASC,gBAAgB,KAAQ,QAAS,AAC1C,QAASC,UAAU,CAAEC,OAAO,KAAQ,MAAO,CAiB3C,MAAMC,yBAA2B,AAACC,QAChC,KAAM,CAACC,SAAUC,WAAW,CAAG,AAACF,CAAAA,OAAS,cAAa,EAAGG,KAAK,CAAC,KAC/D,MAAMC,MAAuB,CAAC,EAE9B,GAAIH,WAAa,SAAU,CACzBG,MAAMC,GAAG,CAAG,MACZD,CAAAA,MAAME,SAAS,CAAG,oBAClBF,CAAAA,MAAMG,eAAe,CAAG,KAC1B,KAAO,CACLH,MAAMI,MAAM,CAAG,MACfJ,CAAAA,MAAMK,YAAY,CAAG,oBACrBL,CAAAA,MAAMG,eAAe,CAAG,QAC1B,CAEA,GAAIL,aAAe,QAAS,CAC1BE,MAAMM,KAAK,CAAG,CAChB,KAAO,CACLN,MAAMO,IAAI,CAAG,CACf,CAEA,OAAOP,KACT,CAKA,QAAO,MAAMQ,SAAWtB,WAA6C,SAASsB,SAC5E,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,YAAY,CAAEC,eAAe,CAAEC,OAAO,CAAEjB,KAAK,CAAE,GAAGkB,MAAO,CAChFC,WAAW,EAEX,KAAM,CAACC,OAAQC,UAAU,CAAG5B,SAAS,OACrC,KAAM,CAAC6B,eAAgBC,kBAAkB,CAAG9B,SAAmC,MAC/E,KAAM,CAAC+B,qBAAsBC,wBAAwB,CAAGhC,SAAgC,MAExF,MAAMiC,SAAWlC,QAAQ,IAAM,CAAC8B,eAAe,CAAE,CAACA,eAAe,EACjE,MAAMK,kBAAoBpC,YAAY,IAAM8B,UAAU,OAAQ,EAAE,EAChEzB,iBAAiB+B,kBAAmBD,UAEpC,OACE,MAACE,OAAId,UAAW,CAAC,EAAEzB,IAAIwC,QAAQ,CAAC,CAAC,EAAET,OAAS/B,IAAI+B,MAAM,CAAG/B,IAAIyC,MAAM,CAAC,CAAC,EAAEhB,WAAa,GAAG,CAAC,WACtF,KAACpB,WACCqC,OAAQX,OAERY,IAAKlC,QAAQyB,kBAAmBJ,aAChCF,QAAS,AAACgB,IACR,GAAIpC,WAAWoC,EAAG,CAAEC,MAAO,CAACV,qBAAqB,AAAC,GAAI,OACtDH,UAAU,CAACD,QACXH,UAAUgB,EAAG,CAACb,OAChB,EACC,GAAGF,KAAK,UAERL,WAEH,KAAClB,WACCwC,YAAY,WACZC,WAAW,SACXC,MAAM,MACNC,OAAO,SACPC,OAAO,SACPnC,MAAOL,yBAAyBC,OAChCgC,IAAKlC,QAAQ2B,wBAAyBT,iBACtCF,UAAWzB,IAAI0B,YAAY,UAE1BA,iBAIT,EAAG,AAEHH,CAAAA,SAAS4B,YAAY,CAAG,CACtBxC,MAAO,cACT"}