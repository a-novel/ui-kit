{"version":3,"sources":["../../../src/components/layouts/Section.tsx"],"sourcesContent":["import css from \"./Section.module.css\";\n\nimport { DetailedHTMLProps, HTMLAttributes, forwardRef } from \"react\";\n\nimport { useSticky } from \"@contexts\";\n\nexport interface SectionProps extends DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement> {\n  /**\n   * <span style=\"color: #32adff;\">Grow the section to take up all available vertical space on screen.</span>\n   *\n   * The available vertical space it the free space in the layout, meaning the part of the screen that is not taken\n   * by menus.\n   *\n   * If the content of the section overflows the available height, the section element will expand accordingly.\n   */\n  fullScreen?: boolean;\n  /**\n   * <span style=\"color: #32adff;\">Disable the default vertical display.</span>\n   *\n   * By default, a section replicates the <span style=\"color: #ffd600;\">{@link Page}</span> vertical display. You can\n   * disable this behavior with this prop.\n   */\n  raw?: boolean;\n}\n\n/**\n * <span style=\"color: #32adff;\">A section is an element of a <span style=\"color: #ffd600;\">{@link Page}</span>.</span>\n *\n * A section is a container that separates different sections on the page. A section is a group of elements serving\n * a common purpose.\n *\n * By default, a section replicates the vertical display of a <span style=\"color: #ffd600;\">{@link Page}</span>. You can\n * control this behavior with props.\n */\nexport const Section = forwardRef<HTMLElement, SectionProps>(function Section(\n  { className, raw, fullScreen, style, ...props },\n  externalRef,\n) {\n  const { offset } = useSticky();\n\n  return (\n    <section\n      ref={externalRef}\n      className={`${css.section} ${fullScreen ? css.fullscreen : \"\"} ${raw ? \"\" : css.vertical} ${className ?? \"\"}`}\n      style={{ minHeight: fullScreen ? `calc(100vh - ${offset}px)` : undefined, ...style }}\n      {...props}\n    />\n  );\n});\n"],"names":["css","forwardRef","useSticky","Section","className","raw","fullScreen","style","props","externalRef","offset","section","ref","fullscreen","vertical","minHeight","undefined"],"mappings":"0CAAA,QAAOA,QAAS,sBAAuB,AAEvC,QAA4CC,UAAU,KAAQ,OAAQ,AAEtE,QAASC,SAAS,KAAQ,WAAY,AA8BtC,QAAO,MAAMC,QAAUF,WAAsC,SAASE,QACpE,CAAEC,SAAS,CAAEC,GAAG,CAAEC,UAAU,CAAEC,KAAK,CAAE,GAAGC,MAAO,CAC/CC,WAAW,EAEX,KAAM,CAAEC,MAAM,CAAE,CAAGR,YAEnB,OACE,KAACS,WACCC,IAAKH,YACLL,UAAW,CAAC,EAAEJ,IAAIW,OAAO,CAAC,CAAC,EAAEL,WAAaN,IAAIa,UAAU,CAAG,GAAG,CAAC,EAAER,IAAM,GAAKL,IAAIc,QAAQ,CAAC,CAAC,EAAEV,WAAa,GAAG,CAAC,CAC7GG,MAAO,CAAEQ,UAAWT,WAAa,CAAC,aAAa,EAAEI,OAAO,GAAG,CAAC,CAAGM,UAAW,GAAGT,KAAK,AAAC,EAClF,GAAGC,KAAK,EAGf,EAAG"}